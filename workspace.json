{
  "version": 1,
  "projects": {
    "remix-ide": {
      "root": "apps/remix-ide",
      "sourceRoot": "apps/remix-ide/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/remix-ide",
            "index": "apps/remix-ide/src/webpack.index.html",
            "main": "apps/remix-ide/src/main.js",
            "polyfills": "apps/remix-ide/src/polyfills.js",
            "tsConfig": "apps/remix-ide/tsconfig.app.json",
            "assets": [
              "apps/remix-ide/src/assets",
              "apps/remix-ide/src/index.html",
              "apps/remix-ide/src/favicon.ico"
            ],
            "styles": [],
            "scripts": [],
            "webpackConfig": "apps/remix-ide/webpack.config.js",
            "maxWorkers": 2
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/remix-ide/src/environments/environment.js",
                  "with": "apps/remix-ide/src/environments/environment.prod.js"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "remix-ide:build",
            "port": 8080,
            "exclude": [
              "**/node_modules/**",
              "apps/remix-ide/build/**/*.js",
              "apps/remix-ide/src/app/editor/mode-solidity.js",
              "apps/remix-ide/soljson.js",
              "apps/remix-ide/js/**/*.js",
              "apps/remix-ide/src/assets/js/**/*.js"
            ]
          },
          "configurations": {
            "production": {
              "buildTarget": "remix-ide:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/remix-ide/.eslintrc",
            "files": ["apps/remix-ide/src/**/*.js"],
            "exclude": [
              "**/node_modules/**",
              "apps/remix-ide/src/app/editor/mode-solidity.js",
              "apps/remix-ide/src/assets/js/**/*.js"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "csslint && node apps/remix-ide/test/index.js"
              }
            ]
          }
        }
      }
    },
    "remix-ide-e2e": {
      "root": "apps/remix-ide-e2e",
      "sourceRoot": "apps/remix-ide-e2e/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "node_modules/.bin/tsc -p apps/remix-ide-e2e/tsconfig.e2e.json"
            ]
          }
        },
        "e2e": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "TEST_SCRIPT='node_modules/.bin/nightwatch --config dist/apps/remix-ide-e2e/nightwatch.js'; if [ {args.env} != undefined ]; then TEST_SCRIPT=${TEST_SCRIPT}' --env {args.env}'; else TEST_SCRIPT=${TEST_SCRIPT}' --env chrome'; fi; if [ {args.filePath} != undefined ]; then TEST_SCRIPT=${TEST_SCRIPT}' {args.filePath}'; fi; eval $TEST_SCRIPT;"
            ],
            "parallel": false
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/remix-ide-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/remix-ide-e2e/**/*"]
          }
        }
      }
    },
    "remix-analyzer": {
      "root": "libs/remix-analyzer",
      "sourceRoot": "libs/remix-analyzer/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/remix-analyzer/.eslintrc",
            "tsConfig": ["libs/remix-analyzer/tsconfig.lib.json"],
            "exclude": ["**/node_modules/**", "libs/remix-analyzer/test/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "./../../node_modules/.bin/npm-run-all test"
              }
            ],
            "cwd": "libs/remix-analyzer"
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/remix-analyzer",
            "tsConfig": "libs/remix-analyzer/tsconfig.lib.json",
            "packageJson": "libs/remix-analyzer/package.json",
            "main": "libs/remix-analyzer/src/index.ts",
            "assets": ["libs/remix-analyzer/*.md"]
          }
        }
      }
    },
    "remix-astwalker": {
      "root": "libs/remix-astwalker",
      "sourceRoot": "libs/remix-astwalker/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/remix-astwalker/.eslintrc",
            "tsConfig": ["libs/remix-astwalker/tsconfig.lib.json"],
            "exclude": ["**/node_modules/**", "libs/remix-astwalker/tests/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "./../../node_modules/.bin/npm-run-all test"
              }
            ],
            "cwd": "libs/remix-astwalker"
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/remix-astwalker",
            "tsConfig": "libs/remix-astwalker/tsconfig.lib.json",
            "packageJson": "libs/remix-astwalker/package.json",
            "main": "libs/remix-astwalker/src/index.ts",
            "assets": ["libs/remix-astwalker/*.md"]
          }
        }
      }
    },
    "remix-debug": {
      "root": "libs/remix-debug",
      "sourceRoot": "libs/remix-debug/",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/remix-debug/.eslintrc",
            "files": ["libs/remix-debug/**/*.js"],
            "exclude": ["**/node_modules/**", "libs/remix-debug/test/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "./../../node_modules/.bin/npm-run-all test"
              }
            ],
            "cwd": "libs/remix-debug"
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/remix-debug",
            "tsConfig": "libs/remix-debug/tsconfig.lib.json",
            "packageJson": "libs/remix-debug/package.json",
            "main": "libs/remix-debug/index.js",
            "assets": [
              {
                "glob": "rdb",
                "input": "libs/remix-debug/bin/",
                "output": "bin/"
              },
              {
                "glob": "*.md",
                "input": "libs/remix-debug/",
                "output": "/"
              }
            ]
          }
        }
      }
    },
    "remix-lib": {
      "root": "libs/remix-lib",
      "sourceRoot": "libs/remix-lib/",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/remix-lib/.eslintrc",
            "files": ["libs/remix-lib/**/*.js"],
            "exclude": ["**/node_modules/**", "libs/remix-lib/test/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "./../../node_modules/.bin/npm-run-all test"
              }
            ],
            "cwd": "libs/remix-lib"
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/remix-lib",
            "tsConfig": "libs/remix-lib/tsconfig.lib.json",
            "packageJson": "libs/remix-lib/package.json",
            "main": "libs/remix-lib/src/index.js",
            "assets": ["libs/remix-lib/*.md"]
          }
        }
      }
    },
    "remix-simulator": {
      "root": "libs/remix-simulator",
      "sourceRoot": "libs/remix-simulator/",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/remix-simulator/.eslintrc",
            "files": ["libs/remix-simulator/**/*.js"],
            "exclude": ["**/node_modules/**", "libs/remix-simulator/test/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "./../../node_modules/.bin/npm-run-all test"
              }
            ],
            "cwd": "libs/remix-simulator"
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/remix-simulator",
            "tsConfig": "libs/remix-simulator/tsconfig.lib.json",
            "packageJson": "libs/remix-simulator/package.json",
            "main": "libs/remix-simulator/index.js",
            "assets": [
              {
                "glob": "ethsim",
                "input": "libs/remix-simulator/bin/",
                "output": "bin/"
              },
              {
                "glob": "*.md",
                "input": "libs/remix-simulator/",
                "output": "/"
              }
            ]
          }
        }
      }
    },
    "remix-solidity": {
      "root": "libs/remix-solidity",
      "sourceRoot": "libs/remix-solidity/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/remix-solidity/.eslintrc",
            "tsConfig": ["libs/remix-solidity/tsconfig.lib.json"],
            "exclude": ["**/node_modules/**"]
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "./../../node_modules/.bin/npm-run-all test"
              }
            ],
            "cwd": "libs/remix-solidity"
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/remix-solidity",
            "tsConfig": "libs/remix-solidity/tsconfig.lib.json",
            "packageJson": "libs/remix-solidity/package.json",
            "main": "libs/remix-solidity/src/index.ts",
            "assets": ["libs/remix-solidity/*.md"]
          }
        }
      }
    },
    "remix-tests": {
      "root": "libs/remix-tests",
      "sourceRoot": "libs/remix-tests/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/remix-tests/.eslintrc",
            "tsConfig": ["libs/remix-tests/tsconfig.lib.json"],
            "exclude": ["**/node_modules/**", "libs/remix-tests/tests/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/remix-tests/jest.config.js",
            "tsConfig": "libs/remix-tests/tsconfig.spec.json"
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/remix-tests",
            "tsConfig": "libs/remix-tests/tsconfig.lib.json",
            "packageJson": "libs/remix-tests/package.json",
            "main": "libs/remix-tests/src/index.ts",
            "assets": [
              {
                "glob": "remix-tests",
                "input": "libs/remix-tests/bin/",
                "output": "bin/"
              },
              {
                "glob": "*.md",
                "input": "libs/remix-tests/",
                "output": "/"
              }
            ]
          }
        }
      }
    },
    "remix-url-resolver": {
      "root": "libs/remix-url-resolver",
      "sourceRoot": "libs/remix-url-resolver/src/",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/remix-url-resolver/.eslintrc",
            "tsConfig": ["libs/remix-url-resolver/tsconfig.lib.json"],
            "exclude": [
              "**/node_modules/**",
              "libs/remix-url-resolver/tests/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "./../../node_modules/.bin/npm-run-all test"
              }
            ],
            "cwd": "libs/remix-url-resolver"
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/remix-url-resolver",
            "tsConfig": "libs/remix-url-resolver/tsconfig.lib.json",
            "packageJson": "libs/remix-url-resolver/package.json",
            "main": "libs/remix-url-resolver/src/index.ts",
            "assets": ["libs/remix-url-resolver/*.md"]
          }
        }
      }
    },
    "remixd": {
      "root": "libs/remixd",
      "sourceRoot": "libs/remixd/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/remixd/tsconfig.lib.json",
              "libs/remixd/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/remixd/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/remixd/jest.config.js",
            "tsConfig": "libs/remixd/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/remixd",
            "tsConfig": "libs/remixd/tsconfig.lib.json",
            "packageJson": "libs/remixd/package.json",
            "main": "libs/remixd/src/index.ts",
            "assets": ["libs/remixd/*.md", "libs/remixd/src/origins.json"]
          }
        },
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "SERVE_SCRIPT='chmod +x dist/libs/remixd/bin/remixd.js; dist/libs/remixd/bin/remixd.js '; if [ {args.folder} != undefined ]; then SERVE_SCRIPT=${SERVE_SCRIPT}' -s {args.folder}'; fi; if [ {args.remixide} != undefined ]; then SERVE_SCRIPT=${SERVE_SCRIPT}' --remix-ide {args.remixide}'; fi; eval $SERVE_SCRIPT;"
              }
            ]
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/react"
  },
  "schematics": {
    "@nrwl/workspace": {
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/cypress": {
      "cypress-project": {
        "linter": "eslint"
      }
    },
    "@nrwl/react": {
      "application": {
        "style": "css",
        "linter": "eslint",
        "babel": true
      },
      "component": {
        "style": "css"
      },
      "library": {
        "style": "css",
        "linter": "eslint"
      }
    },
    "@nrwl/next": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/web": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/node": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/nx-plugin": {
      "plugin": {
        "linter": "eslint"
      }
    },
    "@nrwl/nest": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/express": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    }
  },
  "defaultProject": "remix-ide"
}
